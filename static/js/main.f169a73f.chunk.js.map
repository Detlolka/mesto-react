{"version":3,"sources":["components/Header.js","utils/utils.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithImage.js","components/PopupWithForm.js","components/App.js","serviceWorker.js","index.js","images/logo/logo_header.svg"],"names":["Header","className","src","logo","alt","api","options","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_response","name","link","method","body","JSON","stringify","cardId","about","avatar","authorization","Card","clickCard","deleteCard","card","onClick","type","aria-label","likes","length","Main","props","state","userName","userAbout","userAvatar","cardItems","all","getInitialCards","getUserInfo","user","setState","catch","err","console","error","onEditAvatar","onEditProfile","onEditPlace","map","i","onEditImage","onDeletePlace","key","React","Component","Footer","PopupWIthImage","onClose","PopupWithForm","title","buttonName","isOpen","children","action","noValidate","App","handleEditProfileClick","isEditProfilePopupOpen","handleEditPlaceClick","isAddPlacePopupOpen","handleEditAvatarClick","isEditAvatarPopupOpen","handleEditDeleteClick","isDeletePlacePopupOpen","handleEditImageClick","cardImage","selectedCard","closeAllPopups","Fragment","defaultValue","id","placeholder","required","minLength","maxLength","pattern","PopupWithImage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.f169a73f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport logo from \"../images/logo/logo_header.svg\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"Логотип\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import Api from './Api.js';\r\n\r\nconst api = new Api({\r\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-13\",\r\n    headers: {\r\n        authorization: \"3d90ed66-5470-4061-9f08-ef73936051ae\",\r\n        \"Content-Type\": \"application/json\",\r\n    }\r\n  });\r\n  \r\n  export default api","\r\n class Api {\r\n  constructor(options) {\r\n      this._baseUrl = options.baseUrl;\r\n      this._headers = options.headers;        \r\n  }\r\n  \r\n  _response(res) {\r\n      if (res.ok) {          \r\n          return res.json()\r\n      }\r\n      return Promise.reject(`Что то пошло не так: ${res.status}`)      \r\n  }\r\n\r\n //GET-запрос карточек\r\n  getInitialCards() {                       \r\n    return fetch(`${this._baseUrl}/cards`, { headers: this._headers})\r\n    .then(this._response)    \r\n}\r\n\r\n// POST-запрос на добавление карточки\r\n  createCard (name, link) {  \r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        link\r\n      })      \r\n    })\r\n    .then(this._response)\r\n  }\r\n\r\n// DELETE - запрос на удаление карточки\r\n  removeCard(cardId) { \r\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers\r\n    })\r\n    .then(this._response);\r\n  }\r\n\r\n// PUT-запрос на лайк\r\n  likeCard(cardId) {  \r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'PUT',\r\n      headers: this._headers\r\n    })\r\n    .then(this._response);\r\n  }\r\n\r\n// DELETE- запрос на лайк\r\n  dislikeCard(cardId) {  \r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n    .then(this._response);\r\n  }\r\n  \r\n// GET-запрос на получение данных пользователя\r\n  getUserInfo() {     \r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers  \r\n    })\r\n    .then(this._response)    \r\n  }\r\n\r\n// PATCH-запрос на обновление даннных пользователя с сервера\r\n  changeUserInfo(name, about) {  \r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n            name,\r\n            about\r\n        })        \r\n    })\r\n    .then(this._response)   \r\n }\r\n \r\n// PATCH - запрос на обновление аватарки\r\n  changeAvatar(avatar) {  \r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar\r\n      })\r\n    })\r\n    .then(this._response);\r\n  }\r\n}\r\n\r\nexport default Api;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nfunction Card({ clickCard, deleteCard, card }) {\r\n  return (\r\n    <div className=\"element\">\r\n      <img\r\n        className=\"element__image\"\r\n        alt={card.name}\r\n        src={card.link}\r\n        onClick={() => clickCard(card)}\r\n      />\r\n      <div className=\"element__about\">\r\n        <p className=\"element__title\">{card.name}</p>\r\n        <div className=\"element__like-container\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"element__like\"\r\n            aria-label=\"Лайк\"\r\n          />\r\n          <span className=\"element__like-counter\">{card.likes.length}</span>\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"element__del\"\r\n        aria-label=\"Удалить\"\r\n        onClick={deleteCard}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport api from \"../utils/utils.js\";\r\nimport Card from \"./Card\";\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: \"\",\r\n      userAbout: \"\",\r\n      userAvatar: \"\",\r\n      cardItems: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.all([api.getInitialCards(), api.getUserInfo()])\r\n      .then(([cardItems, user]) => {\r\n        this.setState({\r\n          userName: user.name,\r\n          userAbout: user.about,\r\n          userAvatar: user.avatar,\r\n          cardItems,\r\n        });\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"content\">\r\n        <section className=\"profile\">\r\n          <div className=\"profile__avatar\" onClick={this.props.onEditAvatar}>\r\n            <img\r\n              className=\"profile__image\"\r\n              src={this.state.userAvatar}\r\n              alt=\"Аватарка\"\r\n            />\r\n          </div>\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__container\">\r\n              <h1 className=\"profile__title\">{this.state.userName}</h1>\r\n              <button\r\n                type=\"button\"\r\n                className=\"profile__editButton\"\r\n                onClick={this.props.onEditProfile}\r\n              ></button>\r\n            </div>\r\n            <h2 className=\"profile__subtitle\">{this.state.userAbout}</h2>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"profile__addButton\"\r\n            onClick={this.props.onEditPlace}\r\n          ></button>\r\n        </section>\r\n        <section className=\"elements\">\r\n          {this.state.cardItems.map((card, i) => {\r\n            return (\r\n              <Card\r\n                clickCard={this.props.onEditImage}\r\n                deleteCard={this.props.onDeletePlace}\r\n                card={card}\r\n                key={i}\r\n              />\r\n            );\r\n          })}\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__author\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction PopupWIthImage({ card, onClose }) {\r\n  return (\r\n    <div className={\"popup popup_image \" + (card && \"popup_opened\")}>\r\n      {card && (\r\n        <div className=\"popup__image-container\">\r\n          <img className=\"popup__picture\" alt={card.name} src={card.link} />\r\n          <p className=\"popup__description\">{card.name}</p>\r\n          <button\r\n            type=\"button\"\r\n            className=\"popup__close\"\r\n            aria-label=\"Закрыть\"\r\n            onClick={onClose}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWIthImage;\r\n","import React from \"react\";\r\n\r\nfunction PopupWithForm({name, title, buttonName, isOpen, onClose, children}) {\r\n  return (\r\n    <div\r\n      className={\r\n        `popup popup_${name} ` + (isOpen && \"popup_opened\")\r\n      }\r\n    >\r\n      <div className=\"popup__container\">\r\n        <form\r\n          className=\"popup__form\"\r\n          name={name}\r\n          method=\"GET\"\r\n          action=\"#\"\r\n          noValidate\r\n        >\r\n          <p className=\"popup__title\">{title}</p>\r\n          {children}\r\n          <button type=\"submit\" className=\"popup__save\">\r\n            {buttonName}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"popup__close\"\r\n            aria-label=\"Закрыть\"\r\n            onClick={onClose}\r\n          ></button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from \"react\";\r\nimport \"../index.css\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport PopupWithImage from \"./PopupWithImage\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditProfilePopupOpen: false,\r\n      isAddPlacePopupOpen: false,\r\n      isEditAvatarPopupOpen: false,\r\n      selectedCard: null,\r\n      isDeletePlacePopupOpen: false,\r\n    };\r\n  }\r\n\r\n  handleEditProfileClick = () => {\r\n    this.setState({\r\n      isEditProfilePopupOpen: true,\r\n    });\r\n  };\r\n\r\n  handleEditPlaceClick = () => {\r\n    this.setState({\r\n      isAddPlacePopupOpen: true,\r\n    });\r\n  };\r\n\r\n  handleEditAvatarClick = () => {\r\n    this.setState({\r\n      isEditAvatarPopupOpen: true,\r\n    });\r\n  };\r\n\r\n  handleEditDeleteClick = () => {\r\n    this.setState({\r\n      isDeletePlacePopupOpen: true,\r\n    });\r\n  };\r\n\r\n  handleEditImageClick = (cardImage) => {\r\n    this.setState({\r\n      selectedCard: cardImage,\r\n    });\r\n  };\r\n\r\n  closeAllPopups = () => {\r\n    this.setState({\r\n      isEditProfilePopupOpen: false,\r\n      isAddPlacePopupOpen: false,\r\n      isEditAvatarPopupOpen: false,\r\n      selectedCard: null,\r\n      isDeletePlacePopupOpen: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"page\">\r\n        <Header />\r\n        <Main\r\n          onEditProfile={this.handleEditProfileClick}\r\n          onEditPlace={this.handleEditPlaceClick}\r\n          onEditImage={this.handleEditImageClick}\r\n          onDeletePlace={this.handleEditDeleteClick}\r\n          onEditAvatar={this.handleEditAvatarClick}\r\n        />\r\n        <Footer />\r\n        <PopupWithForm\r\n          name=\"delete-place\"\r\n          title=\"Вы уверены?\"\r\n          buttonName=\"Да\"\r\n          isOpen={this.state.isDeletePlacePopupOpen}\r\n          onClose={this.closeAllPopups}\r\n        />\r\n        <PopupWithForm\r\n          name=\"profile\"\r\n          title=\"Редактировать профиль\"\r\n          buttonName=\"Сохранить\"\r\n          isOpen={this.state.isEditProfilePopupOpen}\r\n          onClose={this.closeAllPopups}\r\n          children={\r\n            <React.Fragment>\r\n              <input\r\n                type=\"text\"\r\n                name=\"profileName\"\r\n                defaultValue=\"Жак-Ив Кусто\"\r\n                className=\"popup__input popup__input_name\"\r\n                id=\"input-name\"\r\n                placeholder=\"Имя\"\r\n                required\r\n                minLength=\"2\"\r\n                maxLength=\"40\"\r\n                pattern=\"[А-ЯЁа-яёA-Za-z-\\s]*\"\r\n              />\r\n              <span className=\"error\" id=\"input-name-error\" />\r\n\r\n              <input\r\n                type=\"text\"\r\n                name=\"profileAbout\"\r\n                defaultValue=\"Исследователь океана\"\r\n                className=\"popup__input popup__input_about\"\r\n                id=\"input-about\"\r\n                placeholder=\"О себе\"\r\n                required\r\n                minLength=\"2\"\r\n                maxLength=\"200\"\r\n              />\r\n              <span className=\"error\" id=\"input-about-error\" />\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        <PopupWithForm\r\n          name=\"card\"\r\n          title=\"Новое место\"\r\n          buttonName=\"Создать\"\r\n          isOpen={this.state.isAddPlacePopupOpen}\r\n          onClose={this.closeAllPopups}\r\n          children={\r\n            <React.Fragment>\r\n              <input\r\n                type=\"text\"\r\n                name=\"placeName\"\r\n                defaultValue=\"\"\r\n                className=\"popup__input popup__input_place\"\r\n                id=\"input-place\"\r\n                placeholder=\"Название\"\r\n                required\r\n                minLength=\"1\"\r\n                maxLength=\"30\"\r\n                pattern=\"[А-ЯЁа-яёA-Za-z-\\s]*\"\r\n              />\r\n              <span className=\"error\" id=\"input-place-error\" />\r\n\r\n              <input\r\n                type=\"url\"\r\n                name=\"placePhoto\"\r\n                defaultValue=\"\"\r\n                className=\"popup__input popup__input_image\"\r\n                id=\"input-url\"\r\n                placeholder=\"Ссылка на картинку\"\r\n                required\r\n              />\r\n              <span className=\"error\" id=\"input-url-error\" />\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        <PopupWithForm\r\n          name=\"avatar\"\r\n          title=\"Обновить аватар\"\r\n          buttonName=\"Сохранить\"\r\n          isOpen={this.state.isEditAvatarPopupOpen}\r\n          onClose={this.closeAllPopups}\r\n          children={\r\n            <React.Fragment>\r\n              <input\r\n                type=\"url\"\r\n                name=\"avatarPhoto\"\r\n                defaultValue=\"\"\r\n                className=\"popup__input popup__input_avatar\"\r\n                id=\"input-avatar\"\r\n                placeholder=\"Введите URL\"\r\n                required\r\n              />\r\n              <span className=\"error\" id=\"input-avatar-error\" />\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        <PopupWithImage\r\n          card={this.state.selectedCard}\r\n          onClose={this.closeAllPopups}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo_header.855a8c98.svg\";"],"sourceRoot":""}