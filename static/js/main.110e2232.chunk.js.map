{"version":3,"sources":["images/logo/logo_header.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithImage.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","utils/utils.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","clickCard","card","deleteCard","onCardDelete","onCardLike","currentUser","useContext","isOwn","owner","_id","userId","cardRemoveButtonClassName","isLiked","likes","some","cardLikeClassName","name","link","onClick","type","aria-label","length","Main","this","props","onEditAvatar","context","userAvatar","userName","onEditProfile","userAbout","onEditPlace","cards","map","i","onEditImage","onDeletePlace","key","Component","contextType","Footer","PopupWIthImage","onClose","PopupWithForm","title","buttonName","isOpen","children","onSubmit","method","action","noValidate","EditProfilePopup","onUpdateUser","useState","setName","about","setAbout","useEffect","evt","preventDefault","Fragment","value","id","placeholder","required","minLength","maxLength","pattern","onChange","target","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","avatar","current","ref","AddPlacePopup","onAddPlace","cardName","setCardName","cardLink","setCardLink","api","options","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_response","body","JSON","stringify","cardId","authorization","App","handleEditProfileClick","setState","isEditProfilePopupOpen","handleEditPlaceClick","isAddPlacePopupOpen","handleEditAvatarClick","isEditAvatarPopupOpen","handleEditDeleteClick","isDeletePlacePopupOpen","handleEditImageClick","cardImage","selectedCard","closeAllPopups","handleUpdateUser","changeUserInfo","user","state","catch","err","console","error","handleUpdateAvatar","changeAvatar","handleCardDelete","removeCard","newCards","cardItems","filter","c","changeCardLike","likeCardStatus","newCard","handleAddPlace","createCard","isLoadingUpdate","editProfile","editAvatar","createPlace","all","getInitialCards","getUserInfo","Provider","PopupWithImage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"yHAAAA,EAAOC,QAAU,IAA0B,yC,2LCW5BC,MARf,WACE,OACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,eAAeC,IAAKC,IAAMC,IAAI,iDCFpCC,EAFYC,IAAMC,gBCsDlBC,MArDf,YAA0E,IAA1DC,EAAyD,EAAzDA,UAAuBC,GAAkC,EAA9CC,WAA8C,EAAlCD,MAAME,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WAEnDC,EAAcR,IAAMS,WAAWV,GAG/BW,EAASN,EAAKO,MAAMC,MAAQJ,EAAYK,OAGxCC,EAAyB,uBAAmBJ,EAAQ,sBAAwB,IAE5EK,EAAUX,EAAKY,MAAMC,MAAK,SAAAb,GAAI,OAAIA,EAAKQ,MAAQJ,EAAYK,UAE3DK,EAAiB,wBAAoBH,EAAU,uBAAyB,IAW9E,OACE,yBAAKpB,UAAU,WACb,yBACEA,UAAU,iBACVG,IAAKM,EAAKe,KACVvB,IAAKQ,EAAKgB,KACVC,QAAS,kBAAMlB,EAAUC,MAE3B,yBAAKT,UAAU,kBACb,uBAAGA,UAAU,kBAAkBS,EAAKe,MACpC,yBAAKxB,UAAU,2BACb,4BACE2B,KAAK,SACL3B,UAAWuB,EACXK,aAAW,2BACXF,QAvBc,WACtBd,EAAWH,MAwBL,0BAAMT,UAAU,yBAAyBS,EAAKY,MAAMQ,UAGxD,4BACEF,KAAK,SACL3B,UAAWmB,EACXS,aAAW,6CACXF,QA5BoB,WACxBf,EAAaF,EAAKQ,UCnBhBa,E,uKAIM,IAAD,OACP,OACE,0BAAM9B,UAAU,WACd,6BAASA,UAAU,WACjB,yBAAKA,UAAU,kBAAkB0B,QAASK,KAAKC,MAAMC,cACnD,yBACEjC,UAAU,iBACVC,IAAK8B,KAAKG,QAAQC,WAClBhC,IAAI,sDAGR,yBAAKH,UAAU,iBACb,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,kBAAkB+B,KAAKG,QAAQE,UAC7C,4BACET,KAAK,SACL3B,UAAU,sBACV0B,QAASK,KAAKC,MAAMK,iBAGxB,wBAAIrC,UAAU,qBAAqB+B,KAAKG,QAAQI,YAElD,4BACEX,KAAK,SACL3B,UAAU,qBACV0B,QAASK,KAAKC,MAAMO,eAGxB,6BAASvC,UAAU,YAChB+B,KAAKC,MAAMQ,MAAMC,KAAI,SAAChC,EAAMiC,GAC3B,OACE,kBAAC,EAAD,CACE9B,WAAY,EAAKoB,MAAMpB,WACvBJ,UAAW,EAAKwB,MAAMW,YACtBjC,WAAY,EAAKsB,MAAMY,cACvBjC,aAAc,EAAKqB,MAAMrB,aACzBF,KAAMA,EACNoC,IAAKH,a,GAzCFrC,IAAMyC,WAAnBhB,EAEGiB,YAAc3C,EAiDR0B,QC7CAkB,MARf,WACE,OACE,4BAAQhD,UAAU,UAChB,uBAAGA,UAAU,kBAAb,4BCgBSiD,MAnBf,YAA4C,IAAlBxC,EAAiB,EAAjBA,KAAMyC,EAAW,EAAXA,QAC9B,OACE,yBAAKlD,UAAW,sBAAwBS,GAAQ,iBAC7CA,GACC,yBAAKT,UAAU,0BACb,yBAAKA,UAAU,iBAAiBG,IAAKM,EAAKe,KAAMvB,IAAKQ,EAAKgB,OAC1D,uBAAGzB,UAAU,sBAAsBS,EAAKe,MACxC,4BACEG,KAAK,SACL3B,UAAU,eACV4B,aAAW,6CACXF,QAASwB,OCsBNC,MAjCf,YAAwF,IAAhE3B,EAA+D,EAA/DA,KAAM4B,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,WAAYC,EAAsC,EAAtCA,OAAQJ,EAA8B,EAA9BA,QAASK,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,SAC1E,OACE,yBACExD,UACE,sBAAewB,EAAf,MAA0B8B,GAAU,iBAGtC,yBAAKtD,UAAU,oBACb,0BACEwD,SAAUA,EACVxD,UAAU,cACVwB,KAAMA,EACNiC,OAAO,MACPC,OAAO,IACPC,YAAU,GAEV,uBAAG3D,UAAU,gBAAgBoD,GAC5BG,EACD,4BAAQ5B,KAAK,SAAS3B,UAAU,eAC7BqD,GAEH,4BACE1B,KAAK,SACL3B,UAAU,eACV4B,aAAW,6CACXF,QAASwB,QC8CNU,MApEf,YAA6D,IAAjCV,EAAgC,EAAhCA,QAASI,EAAuB,EAAvBA,OAAQO,EAAe,EAAfA,aACrChD,EAAcR,IAAMS,WAAWV,GADqB,EAElC0D,mBAAS,IAFyB,mBAEnDtC,EAFmD,KAE7CuC,EAF6C,OAGhCD,mBAAS,IAHuB,mBAGnDE,EAHmD,KAG5CC,EAH4C,KAwB1D,OALAC,qBAAU,WACRH,EAAQlD,EAAYuB,UACpB6B,EAASpD,EAAYyB,aACpB,CAACzB,IAGF,kBAAC,EAAD,CACEW,KAAK,UACL4B,MAAM,4HACNC,WAAW,yDACXC,OAAQA,EACRJ,QAASA,EACTM,SAlBiB,SAACW,GACpBA,EAAIC,iBACJP,EAAarC,EAAMwC,GACnBd,KAgBEK,SACE,kBAAC,IAAMc,SAAP,KACE,2BACE1C,KAAK,OACLH,KAAK,cACL8C,MAAO9C,EACPxB,UAAU,iCACVuE,GAAG,aACHC,YAAY,qBACZC,UAAQ,EACRC,UAAU,IACVC,UAAU,KACVC,QAAQ,sDACRC,SAxCc,SAACV,GACvBJ,EAAQI,EAAIW,OAAOR,UAyCb,0BAAMtE,UAAU,QAAQuE,GAAG,qBAE3B,2BACE5C,KAAK,OACLH,KAAK,eACL8C,MAAON,EACPhE,UAAU,kCACVuE,GAAG,cACHC,YAAY,kCACZC,UAAQ,EACRC,UAAU,IACVC,UAAU,MACVE,SAlDgB,SAACV,GACzBF,EAASE,EAAIW,OAAOR,UAmDd,0BAAMtE,UAAU,QAAQuE,GAAG,0BCtBtBQ,MAzCf,YAA6D,IAAnC7B,EAAkC,EAAlCA,QAASI,EAAyB,EAAzBA,OAAQ0B,EAAiB,EAAjBA,eAEjCC,EAAY5E,IAAM6E,SAWxB,OACI,kBAAC,EAAD,CACA1B,SAXiB,SAACW,GAClBA,EAAIC,iBACJY,EAAe,CACXG,OAAQF,EAAUG,QAAQd,QAE9BpB,IACA+B,EAAUG,QAAQd,MAAQ,IAM1B9C,KAAK,SACL4B,MAAM,wFACNC,WAAW,yDACXC,OAAQA,EACRJ,QAASA,EACTK,SACE,kBAAC,IAAMc,SAAP,KACE,2BACE1C,KAAK,MACLH,KAAK,cACLxB,UAAU,mCACVuE,GAAG,eACHC,YAAY,iDACZa,IAAKJ,EACLX,MAAOW,EAAUX,MACjBG,UAAQ,IAEV,0BAAMzE,UAAU,QAAQuE,GAAG,2BC8BxBe,MA9Df,YAAyD,IAAhChC,EAA+B,EAA/BA,OAAQJ,EAAuB,EAAvBA,QAASqC,EAAc,EAAdA,WAAc,EACtBzB,mBAAS,IADa,mBAC/C0B,EAD+C,KACrCC,EADqC,OAEtB3B,mBAAS,IAFa,mBAE/C4B,EAF+C,KAErCC,EAFqC,KAoBtD,OACE,kBAAC,EAAD,CACEnE,KAAK,OACL4B,MAAM,gEACNC,WAAW,6CACXC,OAAQA,EACRJ,QAASA,EACTM,SAfiB,SAACW,GACpBA,EAAIC,iBACJmB,EAAWC,EAAUE,GACrBxC,IACAuC,EAAY,IACZE,EAAY,KAWVpC,SACE,kBAAC,IAAMc,SAAP,KACE,2BACE1C,KAAK,OACLH,KAAK,YACLxB,UAAU,kCACVuE,GAAG,cACHC,YAAY,mDACZC,UAAQ,EACRC,UAAU,IACVC,UAAU,KACVL,MAAOkB,EACPX,SApCa,SAACV,GACtBsB,EAAYtB,EAAIW,OAAOR,QAoCfM,QAAQ,wDAEV,0BAAM5E,UAAU,QAAQuE,GAAG,sBAE3B,2BACE5C,KAAK,MACLH,KAAK,aACLxB,UAAU,kCACVuE,GAAG,YACHC,YAAY,qGACZK,SA3Ca,SAACV,GACtBwB,EAAYxB,EAAIW,OAAOR,QA2CfA,MAAOoB,EACPjB,UAAQ,IAEV,0BAAMzE,UAAU,QAAQuE,GAAG,wBCsCtBqB,EAFH,I,WA3FV,WAAYC,GAAU,oBAClB9D,KAAK+D,SAAWD,EAAQE,QACxBhE,KAAKiE,SAAWH,EAAQI,Q,sDAGlBC,GACN,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,0GAAuCJ,EAAIK,W,wCAKpD,OAAOC,MAAM,GAAD,OAAIzE,KAAK+D,SAAT,UAA2B,CAAEG,QAASlE,KAAKiE,WACtDS,KAAK1E,KAAK2E,a,iCAIDlF,EAAMC,GAChB,OAAO+E,MAAM,GAAD,OAAIzE,KAAK+D,SAAT,UAA2B,CACrCrC,OAAQ,OACRwC,QAASlE,KAAKiE,SACdW,KAAMC,KAAKC,UAAU,CACnBrF,OACAC,WAGHgF,KAAK1E,KAAK2E,a,iCAIFI,GACT,OAAON,MAAM,GAAD,OAAIzE,KAAK+D,SAAT,kBAA2BgB,GAAU,CAC/CrD,OAAQ,SACRwC,QAASlE,KAAKiE,WAEfS,KAAK1E,KAAK2E,a,qCAIEI,EAAQ1F,GACrB,OAAGA,EACIoF,MAAM,GAAD,OAAIzE,KAAK+D,SAAT,wBAAiCgB,GAAU,CACrDrD,OAAQ,MACRwC,QAASlE,KAAKiE,WAEfS,KAAK1E,KAAK2E,WAELF,MAAM,GAAD,OAAIzE,KAAK+D,SAAT,wBAAiCgB,GAAU,CACtDrD,OAAQ,SACRwC,QAASlE,KAAKiE,WAEfS,KAAK1E,KAAK2E,a,oCAMT,OAAOF,MAAM,GAAD,OAAIzE,KAAK+D,SAAT,aAA8B,CACxCG,QAASlE,KAAKiE,WAEfS,KAAK1E,KAAK2E,a,qCAIElF,EAAMwC,GACnB,OAAOwC,MAAM,GAAD,OAAIzE,KAAK+D,SAAT,aAA8B,CACtCrC,OAAQ,QACRwC,QAASlE,KAAKiE,SACdW,KAAMC,KAAKC,UAAU,CACjBrF,OACAwC,YAGPyC,KAAK1E,KAAK2E,a,mCAIAvB,GACX,OAAOqB,MAAM,GAAD,OAAIzE,KAAK+D,SAAT,oBAAqC,CAC/CrC,OAAQ,QACRwC,QAASlE,KAAKiE,SACdW,KAAMC,KAAKC,UAAU,CACnB1B,aAGHsB,KAAK1E,KAAK2E,e,KAIH,CC9Fc,CACtBX,QAAS,8CACTE,QAAS,CACLc,cAAe,uCACf,eAAgB,sBCsNTC,E,kDA7Mb,WAAYhF,GAAQ,IAAD,8BACjB,cAAMA,IAsBRiF,uBAAyB,WACvB,EAAKC,SAAS,CACZC,wBAAwB,KAzBT,EA6BnBC,qBAAuB,WACrB,EAAKF,SAAS,CACZG,qBAAqB,KA/BN,EAmCnBC,sBAAwB,WACtB,EAAKJ,SAAS,CACZK,uBAAuB,KArCR,EAyCnBC,sBAAwB,WACtB,EAAKN,SAAS,CACZO,wBAAwB,KA3CT,EA+CnBC,qBAAuB,SAACC,GACtB,EAAKT,SAAS,CACZU,aAAcD,KAjDC,EAqDnBE,eAAiB,WACf,EAAKX,SAAS,CACZC,wBAAwB,EACxBE,qBAAqB,EACrBE,uBAAuB,EACvBK,aAAc,KACdH,wBAAwB,KA3DT,EAgEnBK,iBAAmB,SAACtG,EAAMwC,GACxB4B,EACGmC,eAAevG,EAAMwC,GACrByC,MAAK,SAACuB,GAAD,OACJ,EAAKd,SAAS,CACZrG,YAAY,2BACP,EAAKoH,MAAMpH,aADL,IAETuB,SAAU4F,EAAKxG,KACfc,UAAW0F,EAAKhE,aAIrBkE,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,OA5Ef,EAgFnBG,mBAAqB,SAACnD,GACpBS,EACG2C,aAAapD,GACbsB,MAAK,SAACuB,GAAD,OACJ,EAAKd,SAAS,CACZrG,YAAY,2BACP,EAAKoH,MAAMpH,aADL,IAETsB,WAAY6F,EAAK7C,cAItB+C,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,OA3Ff,EA+FnBK,iBAAmB,SAAC1B,GAClBlB,EACG6C,WAAW3B,GACXL,MAAK,SAACP,GACL,IAAMwC,EAAW,EAAKT,MAAMU,UAAUC,QAAO,SAACC,GAAD,OAAOA,EAAE5H,MAAQ6F,KAC9D,EAAKI,SAAS,CACZyB,UAAWD,OAGdR,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,OAxGf,EA4GnBW,eAAiB,SAACrI,GAChB,IAAMW,EAAUX,EAAKY,MAAMC,MACzB,SAACoB,GAAD,OAAOA,EAAEzB,MAAQ,EAAKgH,MAAMpH,YAAYK,UAE1C0E,EACGmD,eAAetI,EAAKQ,KAAMG,GAC1BqF,MAAK,SAACuC,GACL,IAAMN,EAAW,EAAKT,MAAMU,UAAUlG,KAAI,SAACoG,GAAD,OACxCA,EAAE5H,MAAQR,EAAKQ,IAAM+H,EAAUH,KAEjC,EAAK3B,SAAS,CACZyB,UAAWD,OAGdR,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,OA1Hf,EA8HnBc,eAAiB,SAACzH,EAAMC,GACtBmE,EACGsD,WAAW1H,EAAMC,GACjBgF,MAAK,SAACuC,GACL,EAAK9B,SAAS,CACZyB,UAAU,CAAEK,GAAH,mBAAe,EAAKf,MAAMU,iBAGtCT,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,OApIhC,EAAKF,MAAQ,CACXd,wBAAwB,EACxBE,qBAAqB,EACrBE,uBAAuB,EACvBK,aAAc,KACdH,wBAAwB,EACxB5G,YAAa,CACXuB,SAAU,GACVE,UAAW,GACXH,WAAY,GACZjB,OAAQ,IAEVyH,UAAW,GACXQ,gBAAiB,CACfC,aAAa,EACbC,YAAY,EACZC,aAAa,IAlBA,E,gEA0IE,IAAD,OAClBjD,QAAQkD,IAAI,CAAC3D,EAAI4D,kBAAmB5D,EAAI6D,gBACrChD,MAAK,YAAwB,IAAD,mBAArBkC,EAAqB,KAAVX,EAAU,KAC3B,EAAKd,SAAS,CACZrG,YAAa,CACXuB,SAAU4F,EAAKxG,KACfc,UAAW0F,EAAKhE,MAChB7B,WAAY6F,EAAK7C,OACjBjE,OAAQ8G,EAAK/G,KAEf0H,iBAGHT,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,Q,+BAGxB,IAAD,OACP,OACE,kBAAC,EAAmBuB,SAApB,CAA6BpF,MAAOvC,KAAKkG,MAAMpH,aAC7C,yBAAKb,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEqC,cAAeN,KAAKkF,uBACpB1E,YAAaR,KAAKqF,qBAClBzE,YAAaZ,KAAK2F,qBAClB9E,cAAeb,KAAKyF,sBACpBvF,aAAcF,KAAKuF,sBACnB9E,MAAOT,KAAKkG,MAAMU,UAClB/H,WAAYmB,KAAK+G,eACjBnI,aAAcoB,KAAKyG,mBAErB,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEhH,KAAK,eACL4B,MAAM,2DACNC,WAAW,eACXC,OAAQvB,KAAKkG,MAAMR,uBACnBvE,QAASnB,KAAK8F,iBAEhB,kBAAC,EAAD,CACEvE,OAAQvB,KAAKkG,MAAMd,uBACnBjE,QAASnB,KAAK8F,eACdhE,aAAc,SAACrC,EAAMwC,GAAP,OAAiB,EAAK8D,iBAAiBtG,EAAMwC,MAG7D,kBAAC,EAAD,CACEV,OAAQvB,KAAKkG,MAAMV,sBACnBrE,QAASnB,KAAK8F,eACd7C,eAAgB,gBAAGG,EAAH,EAAGA,OAAH,OAAgB,EAAKmD,mBAAmBnD,MAG1D,kBAAC,EAAD,CACE7B,OAAQvB,KAAKkG,MAAMZ,oBACnBnE,QAASnB,KAAK8F,eACdtC,WAAYxD,KAAKkH,iBAGnB,kBAACU,EAAD,CACElJ,KAAMsB,KAAKkG,MAAML,aACjB1E,QAASnB,KAAK8F,uB,GAtMRxH,IAAMyC,WCDJ8G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/D,MAAK,SAAAgE,GACJA,EAAaC,gBAEdxC,OAAM,SAAAG,GACLD,QAAQC,MAAMA,EAAMsC,c","file":"static/js/main.110e2232.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_header.855a8c98.svg\";","import React from \"react\";\r\nimport logo from \"../images/logo/logo_header.svg\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"Логотип\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nconst CurrentUserContext = React.createContext();\r\n\r\nexport default CurrentUserContext","import React from \"react\";\r\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card({ clickCard, deleteCard, card, onCardDelete, onCardLike }) {\r\n     \r\n  const currentUser = React.useContext(CurrentUserContext);  \r\n \r\n\r\n  const isOwn = (card.owner._id === currentUser.userId);\r\n  \r\n \r\n  const cardRemoveButtonClassName = `element__del ${isOwn ? 'element__del_active' : ''}`;\r\n\r\n  const isLiked = card.likes.some(card => card._id === currentUser.userId);\r\n\r\n  const cardLikeClassName = `element__like ${isLiked ? 'element__like_active' : ''}`;\r\n  \r\n\r\n  const handleLikeClick = () => {\r\n    onCardLike(card)\r\n  }\r\n\r\n  const handleDeleteClick = () => {\r\n    onCardDelete(card._id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"element\">\r\n      <img\r\n        className=\"element__image\"\r\n        alt={card.name}\r\n        src={card.link}\r\n        onClick={() => clickCard(card)}\r\n      />\r\n      <div className=\"element__about\">\r\n        <p className=\"element__title\">{card.name}</p>\r\n        <div className=\"element__like-container\">\r\n          <button\r\n            type=\"button\"\r\n            className={cardLikeClassName}\r\n            aria-label=\"Лайк\"\r\n            onClick={handleLikeClick}\r\n          />\r\n          <span className=\"element__like-counter\">{card.likes.length}</span>\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className={cardRemoveButtonClassName}\r\n        aria-label=\"Удалить\"        \r\n        onClick={handleDeleteClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\r\n\r\nclass Main extends React.Component {\r\n\r\n  static contextType = CurrentUserContext;  \r\n\r\n  render() {\r\n    return (\r\n      <main className=\"content\">\r\n        <section className=\"profile\">\r\n          <div className=\"profile__avatar\" onClick={this.props.onEditAvatar}>\r\n            <img\r\n              className=\"profile__image\"\r\n              src={this.context.userAvatar}\r\n              alt=\"Аватарка\"\r\n            />\r\n          </div>\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__container\">\r\n              <h1 className=\"profile__title\">{this.context.userName}</h1>\r\n              <button\r\n                type=\"button\"\r\n                className=\"profile__editButton\"\r\n                onClick={this.props.onEditProfile}\r\n              ></button>\r\n            </div>\r\n            <h2 className=\"profile__subtitle\">{this.context.userAbout}</h2>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"profile__addButton\"\r\n            onClick={this.props.onEditPlace}\r\n          ></button>\r\n        </section>\r\n        <section className=\"elements\">\r\n          {this.props.cards.map((card, i) => {\r\n            return (\r\n              <Card\r\n                onCardLike={this.props.onCardLike}                \r\n                clickCard={this.props.onEditImage}\r\n                deleteCard={this.props.onDeletePlace}\r\n                onCardDelete={this.props.onCardDelete}\r\n                card={card}\r\n                key={i}\r\n              />\r\n            );\r\n          })}\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__author\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction PopupWIthImage({ card, onClose }) {\r\n  return (\r\n    <div className={\"popup popup_image \" + (card && \"popup_opened\")}>\r\n      {card && (\r\n        <div className=\"popup__image-container\">\r\n          <img className=\"popup__picture\" alt={card.name} src={card.link} />\r\n          <p className=\"popup__description\">{card.name}</p>\r\n          <button\r\n            type=\"button\"\r\n            className=\"popup__close\"\r\n            aria-label=\"Закрыть\"\r\n            onClick={onClose}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWIthImage;\r\n","import React from \"react\";\r\n\r\nfunction PopupWithForm({name, title, buttonName, isOpen, onClose, children, onSubmit}) {\r\n  return (\r\n    <div\r\n      className={\r\n        `popup popup_${name} ` + (isOpen && \"popup_opened\")\r\n      }\r\n    >\r\n      <div className=\"popup__container\">\r\n        <form\r\n          onSubmit={onSubmit}\r\n          className=\"popup__form\"\r\n          name={name}\r\n          method=\"GET\"\r\n          action=\"#\"\r\n          noValidate\r\n        >\r\n          <p className=\"popup__title\">{title}</p>\r\n          {children}\r\n          <button type=\"submit\" className=\"popup__save\">\r\n            {buttonName}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"popup__close\"\r\n            aria-label=\"Закрыть\"\r\n            onClick={onClose}\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditProfilePopup({ onClose, isOpen, onUpdateUser}) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [name, setName] = useState(\"\");\r\n  const [about, setAbout] = useState(\"\");\r\n\r\n  const hadneChangeName = (evt) => {\r\n    setName(evt.target.value);\r\n  };\r\n\r\n  const handleChangeAbout = (evt) => {\r\n    setAbout(evt.target.value);\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    onUpdateUser(name, about);\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setName(currentUser.userName);\r\n    setAbout(currentUser.userAbout);\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"profile\"\r\n      title=\"Редактировать профиль\"\r\n      buttonName=\"Сохранить\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      children={\r\n        <React.Fragment>\r\n          <input\r\n            type=\"text\"\r\n            name=\"profileName\"\r\n            value={name}\r\n            className=\"popup__input popup__input_name\"\r\n            id=\"input-name\"\r\n            placeholder=\"Имя\"\r\n            required\r\n            minLength=\"2\"\r\n            maxLength=\"40\"\r\n            pattern=\"[А-ЯЁа-яёA-Za-z-\\s]*\"\r\n            onChange={hadneChangeName}\r\n          />\r\n          <span className=\"error\" id=\"input-name-error\" />\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"profileAbout\"\r\n            value={about}\r\n            className=\"popup__input popup__input_about\"\r\n            id=\"input-about\"\r\n            placeholder=\"О себе\"\r\n            required\r\n            minLength=\"2\"\r\n            maxLength=\"200\"\r\n            onChange={handleChangeAbout}\r\n          />\r\n          <span className=\"error\" id=\"input-about-error\" />\r\n        </React.Fragment>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({onClose, isOpen, onUpdateAvatar}) {\r\n\r\n    const avatarRef = React.useRef();\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        onUpdateAvatar({\r\n            avatar: avatarRef.current.value\r\n        });\r\n        onClose();\r\n        avatarRef.current.value = '';\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n        onSubmit={handleSubmit}\r\n        name=\"avatar\"\r\n        title=\"Обновить аватар\"\r\n        buttonName=\"Сохранить\"\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        children={\r\n          <React.Fragment>\r\n            <input\r\n              type=\"url\"\r\n              name=\"avatarPhoto\"              \r\n              className=\"popup__input popup__input_avatar\"\r\n              id=\"input-avatar\"\r\n              placeholder=\"Введите URL\"\r\n              ref={avatarRef}\r\n              value={avatarRef.value}\r\n              required\r\n            />\r\n            <span className=\"error\" id=\"input-avatar-error\" />\r\n          </React.Fragment>\r\n        }\r\n      />\r\n\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n  const [cardName, setCardName] = useState(\"\");\r\n  const [cardLink, setCardLink] = useState(\"\");\r\n\r\n  const handleCardName = (evt) => {\r\n    setCardName(evt.target.value);\r\n  };\r\n\r\n  const handleCardLink = (evt) => {\r\n    setCardLink(evt.target.value);\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    onAddPlace(cardName, cardLink);\r\n    onClose();\r\n    setCardName(\"\");\r\n    setCardLink(\"\");\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"card\"\r\n      title=\"Новое место\"\r\n      buttonName=\"Создать\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      children={\r\n        <React.Fragment>\r\n          <input\r\n            type=\"text\"\r\n            name=\"placeName\"            \r\n            className=\"popup__input popup__input_place\"\r\n            id=\"input-place\"\r\n            placeholder=\"Название\"\r\n            required\r\n            minLength=\"1\"\r\n            maxLength=\"30\"\r\n            value={cardName}\r\n            onChange={handleCardName}\r\n            pattern=\"[А-ЯЁа-яёA-Za-z-\\s]*\"\r\n          />\r\n          <span className=\"error\" id=\"input-place-error\" />\r\n\r\n          <input\r\n            type=\"url\"\r\n            name=\"placePhoto\"            \r\n            className=\"popup__input popup__input_image\"\r\n            id=\"input-url\"\r\n            placeholder=\"Ссылка на картинку\"\r\n            onChange={handleCardLink}\r\n            value={cardLink}\r\n            required\r\n          />\r\n          <span className=\"error\" id=\"input-url-error\" />\r\n        </React.Fragment>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import { configApi } from './utils.js';\r\n\r\n\r\n class Api {\r\n  constructor(options) {\r\n      this._baseUrl = options.baseUrl;\r\n      this._headers = options.headers;        \r\n  }\r\n  \r\n  _response(res) {\r\n      if (res.ok) {          \r\n          return res.json()\r\n      }\r\n      return Promise.reject(`Что то пошло не так: ${res.status}`)      \r\n  }\r\n\r\n //GET-запрос карточек\r\n  getInitialCards() {                       \r\n    return fetch(`${this._baseUrl}/cards`, { headers: this._headers})\r\n    .then(this._response)    \r\n}\r\n\r\n// POST-запрос на добавление карточки\r\n  createCard (name, link) {  \r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        link\r\n      })      \r\n    })\r\n    .then(this._response)\r\n  }\r\n\r\n// DELETE - запрос на удаление карточки\r\n  removeCard(cardId) { \r\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers\r\n    })\r\n    .then(this._response);\r\n  }\r\n\r\n// PUT и DELETE запросы на лайк\r\n  likeCardStatus(cardId, isLiked) {\r\n    if(isLiked) {  \r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'PUT',\r\n      headers: this._headers\r\n    })\r\n    .then(this._response);\r\n   }\r\n   return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: this._headers\r\n  })\r\n  .then(this._response);\r\n  }\r\n\r\n\r\n// GET-запрос на получение данных пользователя\r\n  getUserInfo() {     \r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers  \r\n    })\r\n    .then(this._response)    \r\n  }\r\n\r\n// PATCH-запрос на обновление даннных пользователя с сервера\r\n  changeUserInfo(name, about) {  \r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n            name,\r\n            about\r\n        })        \r\n    })\r\n    .then(this._response)   \r\n }\r\n \r\n// PATCH - запрос на обновление аватарки\r\n  changeAvatar(avatar) {  \r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar\r\n      })\r\n    })\r\n    .then(this._response);\r\n  }\r\n}\r\n\r\nconst api = new Api(configApi);\r\n\r\nexport default api;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nexport const  configApi = {\r\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-13\",\r\n    headers: {\r\n        authorization: \"3d90ed66-5470-4061-9f08-ef73936051ae\",\r\n        \"Content-Type\": \"application/json\",\r\n    }\r\n  };\r\n  \r\n","import React from \"react\";\r\nimport \"../index.css\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport PopupWithImage from \"./PopupWithImage\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport api from \"../utils/api\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditProfilePopupOpen: false,\r\n      isAddPlacePopupOpen: false,\r\n      isEditAvatarPopupOpen: false,\r\n      selectedCard: null,\r\n      isDeletePlacePopupOpen: false,\r\n      currentUser: {\r\n        userName: \"\",\r\n        userAbout: \"\",\r\n        userAvatar: \"\",\r\n        userId: \"\",\r\n      },\r\n      cardItems: [],\r\n      isLoadingUpdate: {\r\n        editProfile: false,\r\n        editAvatar: false,\r\n        createPlace: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  handleEditProfileClick = () => {\r\n    this.setState({\r\n      isEditProfilePopupOpen: true,\r\n    });\r\n  };\r\n\r\n  handleEditPlaceClick = () => {\r\n    this.setState({\r\n      isAddPlacePopupOpen: true,\r\n    });\r\n  };\r\n\r\n  handleEditAvatarClick = () => {\r\n    this.setState({\r\n      isEditAvatarPopupOpen: true,\r\n    });\r\n  };\r\n\r\n  handleEditDeleteClick = () => {\r\n    this.setState({\r\n      isDeletePlacePopupOpen: true,\r\n    });\r\n  };\r\n\r\n  handleEditImageClick = (cardImage) => {\r\n    this.setState({\r\n      selectedCard: cardImage,\r\n    });\r\n  };\r\n\r\n  closeAllPopups = () => {\r\n    this.setState({\r\n      isEditProfilePopupOpen: false,\r\n      isAddPlacePopupOpen: false,\r\n      isEditAvatarPopupOpen: false,\r\n      selectedCard: null,\r\n      isDeletePlacePopupOpen: false,\r\n    });\r\n  };\r\n\r\n  //смена данных пользователя\r\n  handleUpdateUser = (name, about) => {\r\n    api\r\n      .changeUserInfo(name, about)\r\n      .then((user) =>\r\n        this.setState({\r\n          currentUser: {\r\n            ...this.state.currentUser,\r\n            userName: user.name,\r\n            userAbout: user.about,\r\n          },\r\n        })\r\n      )\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  //Смена аватара пользователя\r\n  handleUpdateAvatar = (avatar) => {\r\n    api\r\n      .changeAvatar(avatar)\r\n      .then((user) =>\r\n        this.setState({\r\n          currentUser: {\r\n            ...this.state.currentUser,\r\n            userAvatar: user.avatar,\r\n          },\r\n        })\r\n      )\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  //Удаление карточки и пересоздание массива\r\n  handleCardDelete = (cardId) => {\r\n    api\r\n      .removeCard(cardId)\r\n      .then((res) => {\r\n        const newCards = this.state.cardItems.filter((c) => c._id !== cardId);\r\n        this.setState({\r\n          cardItems: newCards,\r\n        });\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  //Постановка лайка и удаление лайка\r\n  changeCardLike = (card) => {\r\n    const isLiked = card.likes.some(\r\n      (i) => i._id === this.state.currentUser.userId\r\n    );\r\n    api\r\n      .likeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        const newCards = this.state.cardItems.map((c) =>\r\n          c._id === card._id ? newCard : c\r\n        );\r\n        this.setState({\r\n          cardItems: newCards,\r\n        });\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  //Добавление новой карточки\r\n  handleAddPlace = (name, link) => {\r\n    api\r\n      .createCard(name, link)\r\n      .then((newCard) => {\r\n        this.setState({\r\n          cardItems: [newCard, ...this.state.cardItems],\r\n        });\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  //Перенесен Api в App\r\n  componentDidMount() {\r\n    Promise.all([api.getInitialCards(), api.getUserInfo()])\r\n      .then(([cardItems, user]) => {        \r\n        this.setState({\r\n          currentUser: {\r\n            userName: user.name,\r\n            userAbout: user.about,\r\n            userAvatar: user.avatar,\r\n            userId: user._id,\r\n          },\r\n          cardItems,\r\n        });\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CurrentUserContext.Provider value={this.state.currentUser}>\r\n        <div className=\"page\">\r\n          <Header />\r\n          <Main\r\n            onEditProfile={this.handleEditProfileClick}\r\n            onEditPlace={this.handleEditPlaceClick}\r\n            onEditImage={this.handleEditImageClick}\r\n            onDeletePlace={this.handleEditDeleteClick}\r\n            onEditAvatar={this.handleEditAvatarClick}\r\n            cards={this.state.cardItems}\r\n            onCardLike={this.changeCardLike}\r\n            onCardDelete={this.handleCardDelete}\r\n          />\r\n          <Footer />\r\n          <PopupWithForm\r\n            name=\"delete-place\"\r\n            title=\"Вы уверены?\"\r\n            buttonName=\"Да\"\r\n            isOpen={this.state.isDeletePlacePopupOpen}\r\n            onClose={this.closeAllPopups}\r\n          />\r\n          <EditProfilePopup\r\n            isOpen={this.state.isEditProfilePopupOpen}\r\n            onClose={this.closeAllPopups}\r\n            onUpdateUser={(name, about) => this.handleUpdateUser(name, about)}\r\n          />\r\n\r\n          <EditAvatarPopup\r\n            isOpen={this.state.isEditAvatarPopupOpen}\r\n            onClose={this.closeAllPopups}\r\n            onUpdateAvatar={({ avatar }) => this.handleUpdateAvatar(avatar)}\r\n          />\r\n\r\n          <AddPlacePopup            \r\n            isOpen={this.state.isAddPlacePopupOpen}\r\n            onClose={this.closeAllPopups}\r\n            onAddPlace={this.handleAddPlace}\r\n          />\r\n\r\n          <PopupWithImage\r\n            card={this.state.selectedCard}\r\n            onClose={this.closeAllPopups}\r\n          />\r\n        </div>\r\n      </CurrentUserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}